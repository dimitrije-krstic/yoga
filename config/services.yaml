# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $uploadsPath: '%kernel.project_dir%/public'
            string $publicDir: '%kernel.project_dir%/public'
            $env: '%kernel.environment%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    Redis:
        class: Redis
        calls:
            - connect:
                  - '%env(REDIS_HOST)%'
                  - '%env(int:REDIS_PORT)%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Listener\MaintenanceListener:
        arguments:
            $isLocked: '%env(LOCK_WEBSITE)%'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'

    App\Client\RedisClient:
        arguments:
            $redisClient: '@snc_redis.app_default'

    App\Command\CreateWebMasterCommand:
        arguments:
            $appSecret: '%env(APP_SECRET)%'
